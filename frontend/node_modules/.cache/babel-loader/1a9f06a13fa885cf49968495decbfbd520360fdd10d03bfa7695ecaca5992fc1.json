{"ast":null,"code":"import _objectSpread from\"C:/Users/GulamK/hybrid-app-new/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[data,setData]=useState([]);const[username,setUsername]=useState(localStorage.getItem(\"username\")||\"\");const[tempName,setTempName]=useState(\"\");const[filters,setFilters]=useState({});const[sortConfig,setSortConfig]=useState(null);const[loading,setLoading]=useState(true);// Fetch data from backend\nconst fetchData=async()=>{try{const res=await fetch(\"/api/requirements\");const json=await res.json();setData(json);setLoading(false);}catch(err){console.error(\"Fetch error:\",err);}};useEffect(()=>{if(username)fetchData();},[username]);// Refresh data every 10s\nuseEffect(()=>{if(!username)return;const interval=setInterval(fetchData,10000);return()=>clearInterval(interval);},[username]);// Handle cell updates\nconst updateCell=async(rowId,field,value)=>{const newData=[...data];const row=newData.find(r=>r.id===rowId);if(!row)return;row[field]=value;setData(newData);try{const res=await fetch(\"/api/requirements/\".concat(rowId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(row)});const result=await res.json();if(result.error)alert(result.error);}catch(err){console.error(\"Update error:\",err);}};// Add new row\nconst addRow=async()=>{const newRow={client_name:\"\",requirement_id:\"\",job_title:\"\",status:\"Open\",slots:1,assigned_recruiter:\"\",working:\"\"};try{const res=await fetch(\"/api/requirements\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newRow)});const result=await res.json();setData(prev=>[...prev,result]);}catch(err){console.error(\"Add row error:\",err);}};// Sorting\nconst handleSort=key=>{let direction=\"asc\";if(sortConfig&&sortConfig.key===key&&sortConfig.direction===\"asc\"){direction=\"desc\";}setSortConfig({key,direction});};const sortedData=useMemo(()=>{if(!sortConfig)return data;return[...data].sort((a,b)=>{var _a$sortConfig$key,_b$sortConfig$key;const aV=(_a$sortConfig$key=a[sortConfig.key])!==null&&_a$sortConfig$key!==void 0?_a$sortConfig$key:\"\";const bV=(_b$sortConfig$key=b[sortConfig.key])!==null&&_b$sortConfig$key!==void 0?_b$sortConfig$key:\"\";if(typeof aV===\"number\"&&typeof bV===\"number\"){return sortConfig.direction===\"asc\"?aV-bV:bV-aV;}return sortConfig.direction===\"asc\"?aV.toString().localeCompare(bV.toString()):bV.toString().localeCompare(aV.toString());});},[data,sortConfig]);// Filtering\nconst filteredData=sortedData.filter(row=>Object.keys(filters).every(key=>{var _filters$key;return String(row[key]||\"\").toLowerCase().includes(((_filters$key=filters[key])===null||_filters$key===void 0?void 0:_filters$key.toLowerCase())||\"\");}));if(!username){return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enter Your Name\"}),/*#__PURE__*/_jsx(\"input\",{value:tempName,onChange:e=>setTempName(e.target.value),placeholder:\"Your Name\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(tempName.trim()===\"\"){alert(\"Enter name\");return;}localStorage.setItem(\"username\",tempName);setUsername(tempName);},children:\"Login\"})]});}if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});const columns=Object.keys(data[0]||{});return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Requirements Tracker\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addRow,children:\"Add Row\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"1. Enter \\\"Yes\\\" in Working? column to start working on a Requisition.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"2. To switch Requirements, reset previous row Working? to blank.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"thead\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleSort(col),children:[col,\" \",(sortConfig===null||sortConfig===void 0?void 0:sortConfig.key)===col?sortConfig.direction===\"asc\"?\"▲\":\"▼\":\"\"]},col))}),/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Filter...\",value:filters[col]||\"\",onChange:e=>setFilters(_objectSpread(_objectSpread({},filters),{},{[col]:e.target.value}))})},\"filter_\"+col))})]}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredData.map(row=>{const canEditWorking=row.status===\"Open\"&&row.slots>0;return/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>{if(col===\"status\"){return/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:row[col],onChange:e=>updateCell(row.id,col,e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{children:\"Open\"}),/*#__PURE__*/_jsx(\"option\",{children:\"On Hold\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Closed\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Cancelled\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Filled\"})]})},col);}if(col===\"slots\"){return/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:row[col],onChange:e=>updateCell(row.id,col,parseInt(e.target.value)||0)})},col);}if(col===\"working\"){return/*#__PURE__*/_jsx(\"td\",{children:canEditWorking?/*#__PURE__*/_jsx(\"input\",{value:row[col]||\"\",onChange:e=>{const val=e.target.value;updateCell(row.id,\"working\",val);if(val.toLowerCase()===\"yes\"){updateCell(row.id,\"assigned_recruiter\",username);}else if(row.working===\"Yes\"&&val.toLowerCase()!==\"yes\"){updateCell(row.id,\"assigned_recruiter\",\"\");}}}):\"Non-Workable\"},col);}if(col===\"id\"||col===\"assigned_recruiter\"){return/*#__PURE__*/_jsx(\"td\",{children:row[col]},col);}return/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{value:row[col]||\"\",onChange:e=>updateCell(row.id,col,e.target.value)})},col);})},row.id);})})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsx","_jsx","jsxs","_jsxs","App","data","setData","username","setUsername","localStorage","getItem","tempName","setTempName","filters","setFilters","sortConfig","setSortConfig","loading","setLoading","fetchData","res","fetch","json","err","console","error","interval","setInterval","clearInterval","updateCell","rowId","field","value","newData","row","find","r","id","concat","method","headers","body","JSON","stringify","result","alert","addRow","newRow","client_name","requirement_id","job_title","status","slots","assigned_recruiter","working","prev","handleSort","key","direction","sortedData","sort","a","b","_a$sortConfig$key","_b$sortConfig$key","aV","bV","toString","localeCompare","filteredData","filter","Object","keys","every","_filters$key","String","toLowerCase","includes","className","children","onChange","e","target","placeholder","onClick","trim","setItem","columns","map","col","type","_objectSpread","canEditWorking","parseInt","val"],"sources":["C:/Users/GulamK/hybrid-app-new/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\r\n  const [tempName, setTempName] = useState(\"\");\r\n  const [filters, setFilters] = useState({});\r\n  const [sortConfig, setSortConfig] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch data from backend\r\n  const fetchData = async () => {\r\n    try {\r\n      const res = await fetch(\"/api/requirements\");\r\n      const json = await res.json();\r\n      setData(json);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(\"Fetch error:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (username) fetchData();\r\n  }, [username]);\r\n\r\n  // Refresh data every 10s\r\n  useEffect(() => {\r\n    if (!username) return;\r\n    const interval = setInterval(fetchData, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [username]);\r\n\r\n  // Handle cell updates\r\n  const updateCell = async (rowId, field, value) => {\r\n    const newData = [...data];\r\n    const row = newData.find((r) => r.id === rowId);\r\n    if (!row) return;\r\n    row[field] = value;\r\n    setData(newData);\r\n\r\n    try {\r\n      const res = await fetch(`/api/requirements/${rowId}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(row),\r\n      });\r\n      const result = await res.json();\r\n      if (result.error) alert(result.error);\r\n    } catch (err) {\r\n      console.error(\"Update error:\", err);\r\n    }\r\n  };\r\n\r\n  // Add new row\r\n  const addRow = async () => {\r\n    const newRow = {\r\n      client_name: \"\",\r\n      requirement_id: \"\",\r\n      job_title: \"\",\r\n      status: \"Open\",\r\n      slots: 1,\r\n      assigned_recruiter: \"\",\r\n      working: \"\",\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\"/api/requirements\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newRow),\r\n      });\r\n      const result = await res.json();\r\n      setData((prev) => [...prev, result]);\r\n    } catch (err) {\r\n      console.error(\"Add row error:\", err);\r\n    }\r\n  };\r\n\r\n  // Sorting\r\n  const handleSort = (key) => {\r\n    let direction = \"asc\";\r\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === \"asc\") {\r\n      direction = \"desc\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const sortedData = useMemo(() => {\r\n    if (!sortConfig) return data;\r\n    return [...data].sort((a, b) => {\r\n      const aV = a[sortConfig.key] ?? \"\";\r\n      const bV = b[sortConfig.key] ?? \"\";\r\n      if (typeof aV === \"number\" && typeof bV === \"number\") {\r\n        return sortConfig.direction === \"asc\" ? aV - bV : bV - aV;\r\n      }\r\n      return sortConfig.direction === \"asc\"\r\n        ? aV.toString().localeCompare(bV.toString())\r\n        : bV.toString().localeCompare(aV.toString());\r\n    });\r\n  }, [data, sortConfig]);\r\n\r\n  // Filtering\r\n  const filteredData = sortedData.filter((row) =>\r\n    Object.keys(filters).every((key) =>\r\n      String(row[key] || \"\")\r\n        .toLowerCase()\r\n        .includes(filters[key]?.toLowerCase() || \"\")\r\n    )\r\n  );\r\n\r\n  if (!username) {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <h2>Enter Your Name</h2>\r\n        <input\r\n          value={tempName}\r\n          onChange={(e) => setTempName(e.target.value)}\r\n          placeholder=\"Your Name\"\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            if (tempName.trim() === \"\") {\r\n              alert(\"Enter name\");\r\n              return;\r\n            }\r\n            localStorage.setItem(\"username\", tempName);\r\n            setUsername(tempName);\r\n          }}\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  const columns = Object.keys(data[0] || {});\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h2>Requirements Tracker</h2>\r\n      <button onClick={addRow}>Add Row</button>\r\n\r\n      <div className=\"instructions\">\r\n        <p>1. Enter \"Yes\" in Working? column to start working on a Requisition.</p>\r\n        <p>2. To switch Requirements, reset previous row Working? to blank.</p>\r\n      </div>\r\n\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th key={col} onClick={() => handleSort(col)}>\r\n                  {col}{\" \"}\r\n                  {sortConfig?.key === col\r\n                    ? sortConfig.direction === \"asc\"\r\n                      ? \"▲\"\r\n                      : \"▼\"\r\n                    : \"\"}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th key={\"filter_\" + col}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Filter...\"\r\n                    value={filters[col] || \"\"}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, [col]: e.target.value })\r\n                    }\r\n                  />\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredData.map((row) => {\r\n              const canEditWorking = row.status === \"Open\" && row.slots > 0;\r\n              return (\r\n                <tr key={row.id}>\r\n                  {columns.map((col) => {\r\n                    if (col === \"status\") {\r\n                      return (\r\n                        <td key={col}>\r\n                          <select\r\n                            value={row[col]}\r\n                            onChange={(e) =>\r\n                              updateCell(row.id, col, e.target.value)\r\n                            }\r\n                          >\r\n                            <option>Open</option>\r\n                            <option>On Hold</option>\r\n                            <option>Closed</option>\r\n                            <option>Cancelled</option>\r\n                            <option>Filled</option>\r\n                          </select>\r\n                        </td>\r\n                      );\r\n                    }\r\n                    if (col === \"slots\") {\r\n                      return (\r\n                        <td key={col}>\r\n                          <input\r\n                            type=\"number\"\r\n                            value={row[col]}\r\n                            onChange={(e) =>\r\n                              updateCell(row.id, col, parseInt(e.target.value) || 0)\r\n                            }\r\n                          />\r\n                        </td>\r\n                      );\r\n                    }\r\n                    if (col === \"working\") {\r\n                      return (\r\n                        <td key={col}>\r\n                          {canEditWorking ? (\r\n                            <input\r\n                              value={row[col] || \"\"}\r\n                              onChange={(e) => {\r\n                                const val = e.target.value;\r\n                                updateCell(row.id, \"working\", val);\r\n                                if (val.toLowerCase() === \"yes\") {\r\n                                  updateCell(row.id, \"assigned_recruiter\", username);\r\n                                } else if (\r\n                                  row.working === \"Yes\" &&\r\n                                  val.toLowerCase() !== \"yes\"\r\n                                ) {\r\n                                  updateCell(row.id, \"assigned_recruiter\", \"\");\r\n                                }\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            \"Non-Workable\"\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    }\r\n                    if (col === \"id\" || col === \"assigned_recruiter\") {\r\n                      return <td key={col}>{row[col]}</td>;\r\n                    }\r\n                    return (\r\n                      <td key={col}>\r\n                        <input\r\n                          value={row[col] || \"\"}\r\n                          onChange={(e) => updateCell(row.id, col, e.target.value)}\r\n                        />\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}